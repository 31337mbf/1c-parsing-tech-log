
&НаСервереБезКонтекста
Процедура ОчиститьЖурналНаСервере()
	НаборЗаписей = РегистрыСведений.Журнал.СоздатьНаборЗаписей();
	НаборЗаписей.Записать(Истина);
	НаборЗаписей = РегистрыСведений.ГраницыЧтенияДанных.СоздатьНаборЗаписей();
	НаборЗаписей.Записать(Истина);
	НаборЗаписей = РегистрыСведений.СвойстваСобытия.СоздатьНаборЗаписей();
	НаборЗаписей.Записать(Истина);
	НаборЗаписей = РегистрыСведений.СтатусЗагрузки.СоздатьНаборЗаписей();
	НаборЗаписей.Записать(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьЖурнал(Команда)
	ОчиститьЖурналНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	Если ЭтаФорма.ТекущийЭлемент.Имя = "Список" Тогда
		Если ЭтаФорма.ТекущийЭлемент.ТекущиеДанные <> Неопределено Тогда
			ТекДанные = ЭтаФорма.ТекущийЭлемент.ТекущиеДанные;
			КлючевыеСвойства.Параметры.УстановитьЗначениеПараметра("КлючСобытия", ТекДанные.КлючСобытия);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Список.Параметры.УстановитьЗначениеПараметра("ИспользоватьОтборПоПериоду", Ложь);
	Список.Параметры.УстановитьЗначениеПараметра("ДатаНачала", Дата(1, 1, 1));
	Список.Параметры.УстановитьЗначениеПараметра("ДатаОкончания", Дата(1, 1, 1));			
	Список.Параметры.УстановитьЗначениеПараметра("ИспользоватьОтборПоЗамеру", Ложь);
	Список.Параметры.УстановитьЗначениеПараметра("Замер", Справочники.Замеры.ПустаяСсылка());
	Список.Параметры.УстановитьЗначениеПараметра("ИспользоватьОтборПоСобытию", Ложь);
	Список.Параметры.УстановитьЗначениеПараметра("Событие", Справочники.События.ПустаяСсылка());
	Список.Параметры.УстановитьЗначениеПараметра("Длительность", 0);
	КлючевыеСвойства.Параметры.УстановитьЗначениеПараметра("КлючСобытия", Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000"));
	КлючевыеСвойства.Параметры.УстановитьЗначениеПараметра("ИспользоватьОтборПоКлючевымСловам", Ложь);
	КлючевыеСвойства.Параметры.УстановитьЗначениеПараметра("ОтборПоКлючевымПолям", "");
	Список.Параметры.УстановитьЗначениеПараметра("ИспользоватьОтборПоКлючевымСловам", Ложь);
	Список.Параметры.УстановитьЗначениеПараметра("ОтборПоКлючевымПолям", НайтиВКлючевыхПолях);
	
	ОбновитьСобытияПриИзменении();
КонецПроцедуры

&НаКлиенте
Процедура ФильтрЗамерПриИзменении(Элемент)
	ОбновитьСобытияПриИзменении();
	Список.Параметры.УстановитьЗначениеПараметра("ИспользоватьОтборПоЗамеру", Истина);
	Список.Параметры.УстановитьЗначениеПараметра("Замер", ФильтрЗамер);
	ФильтрСобытийПометкаПриИзменении(ЭтаФорма.Элементы.ФильтрСобытий);
КонецПроцедуры

&НаСервере
Процедура ОбновитьСобытияПриИзменении()
	
	ФильтрСобытий.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Журнал.Событие
	|ИЗ
	|	РегистрСведений.Журнал КАК Журнал
	|ГДЕ
	|	Журнал.Замер = &Замер";
	
	Запрос.УстановитьПараметр("Замер", ФильтрЗамер);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ФильтрСобытий.Добавить(ВыборкаДетальныеЗаписи.Событие, ВыборкаДетальныеЗаписи.Событие);	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ФильтрДлительностьПриИзменении(Элемент)
	Список.Параметры.УстановитьЗначениеПараметра("Длительность", ФильтрДлительность);
КонецПроцедуры

&НаКлиенте
Процедура ФилтрСобытийЗначениеПриИзменении(Элемент)
	Список.Параметры.УстановитьЗначениеПараметра("ИспользоватьОтборПоСобытию", Истина);
	Список.Параметры.УстановитьЗначениеПараметра("Событие", ФильтрСобытий);	
КонецПроцедуры

&НаКлиенте
Процедура НайтиВКлючевыхПоляхПриИзменении(Элемент)
	Если СтрДлина(НайтиВКлючевыхПолях)<>0 Тогда
		КлючевыеСвойства.Параметры.УстановитьЗначениеПараметра("ИспользоватьОтборПоКлючевымСловам", Истина);
		КлючевыеСвойства.Параметры.УстановитьЗначениеПараметра("ОтборПоКлючевымПолям", НайтиВКлючевыхПолях);
		Список.Параметры.УстановитьЗначениеПараметра("ИспользоватьОтборПоКлючевымСловам", Истина);
		Список.Параметры.УстановитьЗначениеПараметра("ОтборПоКлючевымПолям", НайтиВКлючевыхПолях);
	Иначе
		Список.Параметры.УстановитьЗначениеПараметра("ИспользоватьОтборПоКлючевымСловам", Ложь);
		КлючевыеСвойства.Параметры.УстановитьЗначениеПараметра("ИспользоватьОтборПоКлючевымСловам", Ложь);
	КонецЕсли;		
КонецПроцедуры

&НаКлиенте
Процедура ФильтрСобытийПометкаПриИзменении(Элемент)
	Список.Параметры.УстановитьЗначениеПараметра("ИспользоватьОтборПоСобытию", Истина);
	МассивСобытий = Новый Массив;
	Для Каждого Эл Из ФильтрСобытий Цикл
		Если Эл.Пометка Тогда
			МассивСобытий.Добавить(Эл.Значение);
		КонецЕсли;
	КонецЦикла;	
	Если МассивСобытий.Количество()=0 Тогда
		Список.Параметры.УстановитьЗначениеПараметра("ИспользоватьОтборПоСобытию", Ложь);
	КонецЕсли;
	Список.Параметры.УстановитьЗначениеПараметра("Событие", МассивСобытий);	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбновитьСобытияПриИзменении();
	ФильтрСобытийПометкаПриИзменении(ЭтаФорма.Элементы.ФильтрСобытий)
КонецПроцедуры

&НаКлиенте
Процедура ФильтрДлительностьРегулирование(Элемент, Направление, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Коэффициэнт = 1000;
	Если ФильтрДлительность>=100000000 Тогда
		Коэффициэнт = Коэффициэнт*1000000;
	ИначеЕсли ФильтрДлительность>=10000000 Тогда
		Коэффициэнт = Коэффициэнт*100000;
	ИначеЕсли ФильтрДлительность>=1000000 Тогда
		Коэффициэнт = Коэффициэнт*10000;
	ИначеЕсли ФильтрДлительность>=100000 Тогда
		Коэффициэнт = Коэффициэнт*1000;
	ИначеЕсли ФильтрДлительность>=10000 Тогда
		Коэффициэнт = Коэффициэнт*100;
	ИначеЕсли ФильтрДлительность>=1000 Тогда
		Коэффициэнт = Коэффициэнт*10;		
	КонецЕсли;
	
	Если Направление>0 Тогда
		Если ФильтрДлительность=Коэффициэнт/10 Тогда
			ФильтрДлительность = 0; 
		КонецЕсли;
	КонецЕсли;
	
	Если Направление>0 Тогда
		ФильтрДлительность = ФильтрДлительность + Направление*Коэффициэнт;
	Иначе
		ФильтрДлительность = ФильтрДлительность/10;
	КонецЕсли;
	Список.Параметры.УстановитьЗначениеПараметра("Длительность", ФильтрДлительность);
КонецПроцедуры

&НаКлиенте
Процедура ПериодСобытияПриИзменении()
	Если ЗначениеЗаполнено(ДатаНачала) ИЛИ ЗначениеЗаполнено(ДатаОкончания) Тогда
		Список.Параметры.УстановитьЗначениеПараметра("ИспользоватьОтборПоПериоду", Истина);
		Список.Параметры.УстановитьЗначениеПараметра("ДатаНачала", ?(ЗначениеЗаполнено(ДатаНачала), ДатаНачала, '00010101'));
		Список.Параметры.УстановитьЗначениеПараметра("ДатаОкончания", ?(ЗначениеЗаполнено(ДатаОкончания), ДатаОкончания, '39991101'));			
	Иначе
		Список.Параметры.УстановитьЗначениеПараметра("ИспользоватьОтборПоПериоду", Ложь);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
	ПериодСобытияПриИзменении();
КонецПроцедуры


&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	ПериодСобытияПриИзменении();
КонецПроцедуры

