&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Элементы.СерверныйТЖ.ТолькоПросмотр = Истина;
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьЖурналНаСервере()
	
	Если НовыйЗамер=Истина Тогда
		ЗамерОбъект = Справочники.Замеры.СоздатьЭлемент();
		ЗамерОбъект.Наименование = "Из каталога: "+КаталогТЖ;
		ЗамерОбъект.ДатаЗамера = ТекущаяДата();
		ЗамерОбъект.СерверныйТЖ = СерверныйТЖ;
		ЗамерОбъект.НеРабочийКаталог = НеРабочийКаталог;
		Попытка
			ЗамерОбъект.Записать();
		Исключение
			Сообщить(ОписаниеОшибки());
			Возврат;
		КонецПопытки;
		Замер = ЗамерОбъект.Ссылка;
	КонецЕсли;
	
	Если ЗагрузитьФоново=Ложь Тогда
		ОбновлениеДанных.ЗагрузкаЖурналаПредварительноОчистить(Замер,КаталогТЖ);
	Иначе
		
		Если ЗначениеЗаполнено(КлючФоновогоЗадания) Тогда
			ФоновоеЗадание =  ФоновыеЗадания.НайтиПоУникальномуИдентификатору(новый УникальныйИдентификатор(КлючФоновогоЗадания));
			Если НЕ ФоновоеЗадание=Неопределено 
				И ФоновоеЗадание.Состояние=СостояниеФоновогоЗадания.Активно Тогда
				Сообщить("Фоновое задание еще работает");
				Возврат;
			КонецЕсли;
		КонецЕсли;
		мПараметры = новый Массив;
		мПараметры.Добавить(Замер);
		мПараметры.Добавить(КаталогТЖ);
		мПараметры.Добавить(Истина);
		
		ФоновоеЗадание = ФоновыеЗадания.Выполнить("ОбновлениеДанных.ЗагрузкаЖурналаПредварительноОчистить",мПараметры);
		КлючФоновогоЗадания = ФоновоеЗадание.УникальныйИдентификатор;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СостояниеРегламентногоЗадания() Экспорт
	
	Если НЕ СостояниеРегламентногоЗаданияСервер(КлючФоновогоЗадания) Тогда
		ОтключитьОбработчикОжидания("СостояниеРегламентногоЗадания");
		КлючФоновогоЗадания = "";
		Сообщение = "Завершено.";
	Иначе
		Прогресс = ПолучитьПрогресс(Замер);
		Сообщение = " "+Прогресс+"%...";
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПрогресс(Замер)
	Прогресс = 0;
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СтатусЗагрузки.Замер КАК Замер,
	|	СтатусЗагрузки.ЧтениеВПроцессе КАК ЧтениеВПроцессе,
	|	СтатусЗагрузки.Прогресс КАК Прогресс,
	|	СтатусЗагрузки.Разобрано КАК Разобрано,
	|	СтатусЗагрузки.Длительность КАК Длительность
	|ИЗ
	|	РегистрСведений.СтатусЗагрузки КАК СтатусЗагрузки
	|ГДЕ
	|	СтатусЗагрузки.Замер = &Замер";
	Запрос.УстановитьПараметр("Замер",Замер);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Прогресс = Выборка.Прогресс;
	КонецЕсли;
	Возврат Прогресс;
КонецФункции

&НаСервереБезКонтекста
Функция СостояниеРегламентногоЗаданияСервер(КлючФоновогоЗадания)
	
	Если ЗначениеЗаполнено(КлючФоновогоЗадания) Тогда
		ФоновоеЗадание =  ФоновыеЗадания.НайтиПоУникальномуИдентификатору(новый УникальныйИдентификатор(КлючФоновогоЗадания));
		Если ФоновоеЗадание=Неопределено Тогда
			Возврат Ложь;
		КонецЕсли;
		Если НЕ ФоновоеЗадание.Состояние=СостояниеФоновогоЗадания.Активно Тогда
			Возврат Ложь;
		Иначе
			Возврат Истина;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Ложь;
КонецФункции

&НаСервере
Функция ПроверитьСуществованиеКаталога(ИмяКаталога) Экспорт

	КаталогНаДиске = Новый Файл(ИмяКаталога);
	Если КаталогНаДиске.Существует() Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;

КонецФункции 

&НаКлиенте
Процедура ЗагрузитьЖурнал(Команда)
	Если НЕ ЗначениеЗаполнено(КаталогТЖ) Тогда
		Сообщить("Укажите каталог ТЖ прежде!");
		Возврат;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Замер) И НовыйЗамер=Ложь Тогда
		Сообщить("Укажите замер или поставьте новый замер!");
		Возврат;
	КонецЕсли;
	Если НЕ ПроверитьСуществованиеКаталога(КаталогТЖ) Тогда
		Сообщить("Нет доступа к каталогу "+КаталогТЖ);	
		Возврат;
	КонецЕсли;
	
	ЗагрузитьЖурналНаСервере();
	
	Если ЗначениеЗаполнено(КлючФоновогоЗадания) Тогда
		ПодключитьОбработчикОжидания("СостояниеРегламентногоЗадания",1);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НовыйЗамерПриИзменении(Элемент)
	Замер = Неопределено;
	Элементы.Замер.ТолькоПросмотр = НЕ Элементы.Замер.ТолькоПросмотр;
	Элементы.СерверныйТЖ.ТолькоПросмотр = НЕ Элементы.СерверныйТЖ.ТолькоПросмотр;
КонецПроцедуры

&НаКлиенте
Процедура КаталогТЖНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога); 
	Диалог.Заголовок = "Выберите каталог"; 
	Если ЗначениеЗаполнено(ЭтаФорма.КаталогТЖ) Тогда
		Диалог.Каталог = ЭтаФорма.КаталогТЖ;
	КонецЕсли;
	Диалог.МножественныйВыбор = Ложь; 
	ВыборФайлаОткрытияФайла = новый ОписаниеОповещения("ВыборФайлаОткрытияКаталога",ЭтотОбъект,Новый Структура("ИмяЭлемента","КаталогТЖ"));
	Диалог.Показать(ВыборФайлаОткрытияФайла);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборФайлаОткрытияКаталога(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы <> Неопределено И ВыбранныеФайлы.Количество() > 0 Тогда
		ИмяЭлемента = "";
		Если ДополнительныеПараметры.Свойство("ИмяЭлемента",ИмяЭлемента) Тогда
			ЭтаФорма[ИмяЭлемента] = ВыбранныеФайлы[0]; 
		КонецЕсли;
	КонецЕсли; 
	
КонецПроцедуры

